 version: 2.1

 orbs:
  win: circleci/windows@2.2.0
  aws-s3: circleci/aws-s3@1.0.16

 jobs:
   build:
     machine:
      image: ubuntu-1604:202007-01 
     parameters:
      env:
        description: "The environment to deploy Winged Keys to (qa, devsecure, staging)"
        type: string
    
     steps:
       - checkout
       - run:
          name: Manually install the .NET SDK
          command: |
            sudo apt-get install -y gnupg2
            wget -O - https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor -o microsoft.asc.gpg
            sudo mv microsoft.asc.gpg /etc/apt/trusted.gpg.d/
            wget https://packages.microsoft.com/config/ubuntu/16.04/prod.list
            sudo mv prod.list /etc/apt/sources.list.d/microsoft-prod.list
            sudo chown root:root /etc/apt/trusted.gpg.d/microsoft.asc.gpg
            sudo chown root:root /etc/apt/sources.list.d/microsoft-prod.list
            sudo apt-get update; \
              sudo apt-get install -y apt-transport-https && \
              sudo apt-get update && \
              sudo apt-get install -y dotnet-sdk-3.1
       - run:
          name: Globally install Entity Framework
          command: dotnet tool install --global dotnet-ef --version 3.1.4
       - run:
          name: Add global Dotnet tools to path
          command: echo 'export PATH="$PATH:$HOME/.dotnet/tools/"' >> $BASH_ENV
       - run:
          name: Generate migrations
          command: |
            export ConnectionStrings__WingedKeys=xxx && dotnet-ef --verbose migrations script --idempotent --output winged-keys-persisted-db.sql --context PersistedGrantDbContext --project src/WingedKeys
            export ConnectionStrings__WingedKeys=xxx && dotnet-ef --verbose migrations script --idempotent --output winged-keys-configuration-db.sql --context ConfigurationDbContext --project src/WingedKeys
            export ConnectionStrings__WingedKeys=xxx && dotnet-ef --verbose migrations script --idempotent --output winged-keys-wingedkeys-db.sql --context WingedKeysContext --project src/WingedKeys
       - run:
          name: "Compile and bundle the application"
          command: dotnet publish src/WingedKeys/WingedKeys.csproj --output src/WingedKeys/dist --configuration Release
       - run:
          name: "Add installation files to bundled distribution"
          command: |
            cp installer/aws-windows-deployment-manifest.json src/WingedKeys/dist
            cp installer/iis/web.config src/WingedKeys/dist
            cp -r installer src/WingedKeys/dist/installer
       - persist_to_workspace:
          root: .
          paths:
            - .

   deploy:
     machine:
      image: ubuntu-1604:202007-01 
     parameters:
      env:
        description: "The environment to deploy Winged Keys to (qa, devsecure, staging)"
        type: string
     steps:
       - attach_workspace:
          at: .
       - run:
          name: 'Setup installer for AWS Beanstalk'
          command: |
            cd src/WingedKeys/dist
            cp -f aws-windows-deployment-manifest.json ..
            cp -r installer/ebextensions ../.ebextensions
            cp -f installer/iis/web.config web.config
            cp -f installer/iis/web.config ../web.config
       - run:
          name: 'Create security directory'
          command: |
            cd src/WingedKeys/dist
            mkdir security
      #  - run:
      #     name: 'Token replace with environment variables'
      #     command: |
       - aws-s3/copy:
          # TODO: Customize by env
          from: 's3://ece-reporter-staging-store/secrets/wingedkeys/staging-wingedkeys.pfx'
          to: src/WingedKeys/dist/security/
       - add_ssh_keys
       - run:
          name: 'Put SQL Migrations on Jump Server'
          command: |
            scp winged-keys-configuration-db.sql ubuntu@<< parameters.env >>.ece-jumpserver.ctoecskylight.com:/home/ubuntu/stage/wingedkeys/
            scp winged-keys-persisted-db.sql ubuntu@<< parameters.env >>.ece-jumpserver.ctoecskylight.com:/home/ubuntu/stage/wingedkeys/
            scp winged-keys-wingedkeys-db.sql ubuntu@<< parameters.env >>.ece-jumpserver.ctoecskylight.com:/home/ubuntu/stage/wingedkeys/
       - run:
          name: 'Run SQL Migrations'
          command: |
            ssh ubuntu@<< parameters.env >>.ece-jumpserver.ctoecskylight.com "cd /home/ubuntu/stage/wingedkeys/ && /home/ubuntu/scripts/db-migrate-wingedkeys.sh winged-keys-configuration-db.sql && /home/ubuntu/scripts/db-migrate-wingedkeys.sh winged-keys-persisted-db.sql && /home/ubuntu/scripts/db-migrate-wingedkeys.sh winged-keys-wingedkeys-db.sql"
       - run:
          name: 'Remove Migrations from Jump Server'
          command: |
            ssh ubuntu@<< parameters.env >>.ece-jumpserver.ctoecskylight.com "cd /home/ubuntu/stage/wingedkeys/ && rm winged-keys-configuration-db.sql winged-keys-persisted-db.sql winged-keys-wingedkeys-db.sql"
       - run:
          name: Install Elastic Beanstalk CLI
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python3-pip python3-dev build-essential
            sudo pip3 install awsebcli
       - run:
          name: Create deploy bundle for Elastic Beanstalk
          command: |
            mv src/WingedKeys/dist src/WingedKeys/site
            cd src/WingedKeys/
            zip -r site.zip site
            mkdir winged-keys-app
            mv site.zip winged-keys-app/site.zip
            mv aws-windows-deployment-manifest.json winged-keys-app/aws-windows-deployment-manifest.json
            mv .ebextensions winged-keys-app/.ebextensions
            zip -r winged-keys-app.zip winged-keys-app
       - run:
          name: Clean up remainder of deploy directory
          command: |
            cd src/WingedKeys/
            rm -rf site
       - run:
          name: Initialize Elastic Beanstalk
          command: |
            cd src/WingedKeys/
            eb init ece-wingedkeys-<< parameters.env >>-app --region us-east-2 --platform iis-10.0
       - run:
          name: Deploy to Elastic Beanstalk environment
          command: |
            cd src/WingedKeys/
            eb deploy ece-wingedkeys-<< parameters.env >>-env --staged

 workflows:
    deploy-to-devsecure:
      jobs:
        - build:
            env: devsecure
        - deploy:
            env: devsecure
            requires:
              - build