 version: 2.1

 orbs:
  win: circleci/windows@2.2.0

 jobs:
   build:
     machine:
      image: ubuntu-1604:202007-01 
    
     steps:
       - checkout
       - run:
          name: Manually install the .NET SDK
          command: |
            sudo apt-get install -y gnupg2
            wget -O - https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor -o microsoft.asc.gpg
            sudo mv microsoft.asc.gpg /etc/apt/trusted.gpg.d/
            wget https://packages.microsoft.com/config/ubuntu/16.04/prod.list
            sudo mv prod.list /etc/apt/sources.list.d/microsoft-prod.list
            sudo chown root:root /etc/apt/trusted.gpg.d/microsoft.asc.gpg
            sudo chown root:root /etc/apt/sources.list.d/microsoft-prod.list
            sudo apt-get update; \
              sudo apt-get install -y apt-transport-https && \
              sudo apt-get update && \
              sudo apt-get install -y dotnet-sdk-3.1
       - run:
          name: Install Entity Framework
          command: dotnet tool install dotnet-ef --version 3.1.4 --global
       - run:
          command: export ConnectionStrings__WingedKeys=xxx && dotnet-ef --verbose migrations script --idempotent --output winged-keys-persisted-db.sql --context PersistedGrantDbContext --project src/WingedKeys
          name: "Generate Persisted migration script"
       - run:
          command: export ConnectionStrings__WingedKeys=xxx && $(Agent.ToolsDirectory)/dotnet-ef --verbose migrations script --idempotent --output $(Build.ArtifactStagingDirectory)/winged-keys-configuration-db.sql --context ConfigurationDbContext --project src/WingedKeys
          name: "Generate Configuration migration script"
       - run:
          command: export ConnectionStrings__WingedKeys=xxx && $(Agent.ToolsDirectory)/dotnet-ef --verbose migrations script --idempotent --output $(Build.ArtifactStagingDirectory)/winged-keys-wingedkeys-db.sql --context WingedKeysContext --project src/WingedKeys
          name: "Generate Configuration migration script"
       - run:
          command: dotnet publish "$(Build.SourcesDirectory)/src/WingedKeys/WingedKeys.csproj" --output "$(Build.SourcesDirectory)/src/WingedKeys/dist" --configuration Release
          name: "Script: dotnet publish"
       - run:
          command: cp installer/aws-windows-deployment-manifest.json $(Build.SourcesDirectory)/src/WingedKeys/dist
          name: "Script: add installer manifest to distribution"
       - run: 
          command: cp installer/iis/web.config $(Build.SourcesDirectory)/src/WingedKeys/dist
          name: "Script: add installer web.config to distribution"
       - run:
          command: cp -r installer $(Build.SourcesDirectory)/src/WingedKeys/dist/installer
          name: "Script: add installer files to distribution"

