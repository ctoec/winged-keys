version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.16

jobs:
  prep:
    machine:
      image: ubuntu-1604:202007-01 
    parameters:
      env:
        description: "The environment to deploy Winged Keys to (qa, devsecure, staging)"
        type: string
    steps:
      - checkout
      - run:
          name: 'Create security directory'
          command: |
            cd src/WingedKeys
            mkdir security
      - run:
          name: Install JQ 
          command: sudo apt-get install jq
      - run:
          name: 'Update Appsettings with environment specific variables'
          # TODO: REMOVE PASSWORDS FROM THIS
          command: |
            cd src/WingedKeys
            jq '.AccessTokenLifetime="1800"' appsettings.json > temp.json && mv temp.json appsettings.json
            jq '.BaseUri="https://<< parameters.env >>.ece-wingedkeys.ctoecskylight.com"' appsettings.json > temp.json && mv temp.json appsettings.json
            jq '.CertificateFileName="security/<< parameters.env >>-wingedkeys.pfx"' appsettings.json > temp.json && mv temp.json appsettings.json
            jq '.CertificatePassword="f7u7vC3vxEY9bKBWoMSBMI5trFD1Ffo3kQ=="' appsettings.json > temp.json && mv temp.json appsettings.json
            jq '.ClientUris="https://<< parameters.env >>.ece-hedwig.ctoecskylight.com,https://localhost:5001,https://<< parameters.env >>.ece-fawkes.ctoecskylight.com"' appsettings.json > temp.json && mv temp.json appsettings.json
            jq '.ConnectionStrings.WINGEDKEYS="Server=<< parameters.env >>.ece-db.ctoecskylight.com;Database=wingedkeys;User Id=admin;Password=Z6EUX_123GwEq_HMVZN_;"' appsettings.json > temp.json && mv temp.json appsettings.json
            jq '.EnvironmentName="<< parameters.env >>"' appsettings.json > temp.json && mv temp.json appsettings.json
            jq '.Logging.LogGroup="/aws/elasticbeanstalk/ece-wingedkeys-<< parameters.env >>-env/app-log"' appsettings.json > temp.json && mv temp.json appsettings.json
            jq '.Logging.LogLevel.Default="Information"' appsettings.json > temp.json && mv temp.json appsettings.json
            jq '.Logging.LogLevel.Microsoft="Warning"' appsettings.json > temp.json && mv temp.json appsettings.json
            jq '.Logging.LogLevel.System="Warning"' appsettings.json > temp.json && mv temp.json appsettings.json
            jq '.Logging.Region="us-east-2"' appsettings.json > temp.json && mv temp.json appsettings.json
            cat appsettings.json
      - run:
          name: 'Update Elastic Beanstalk Deploy Defaults'
          command: |
            cd src/WingedKeys
            jq '.application="ece-wingedkeys-<< parameters.env >>-app"' aws-beanstalk-tools-defaults.json > temp.json && mv temp.json aws-beanstalk-tools-defaults.json
            jq '.environment="ece-wingedkeys-<< parameters.env >>-env"' aws-beanstalk-tools-defaults.json > temp.json && mv temp.json aws-beanstalk-tools-defaults.json
      - aws-s3/copy:
          from: 's3://ece-reporter-<< parameters.env >>-store/secrets/wingedkeys/<< parameters.env >>-wingedkeys.pfx'
          to: src/WingedKeys/security/
      - persist_to_workspace:
          root: .
          paths:
            - .
      
  deploy:
    machine:
      image: ubuntu-1604:202007-01 
    parameters:
      env:
        description: "The environment to deploy Winged Keys to (qa, devsecure, staging)"
        type: string
    steps:
      - checkout
      - run:
          name: Manually install the .NET SDK
          command: |
            sudo apt-get install -y gnupg2
            wget -O - https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor -o microsoft.asc.gpg
            sudo mv microsoft.asc.gpg /etc/apt/trusted.gpg.d/
            wget https://packages.microsoft.com/config/ubuntu/16.04/prod.list
            sudo mv prod.list /etc/apt/sources.list.d/microsoft-prod.list
            sudo chown root:root /etc/apt/trusted.gpg.d/microsoft.asc.gpg
            sudo chown root:root /etc/apt/sources.list.d/microsoft-prod.list
            sudo apt-get update; \
              sudo apt-get install -y apt-transport-https && \
              sudo apt-get update && \
              sudo apt-get install -y dotnet-sdk-3.1
      - run:
          name: Globally install Entity Framework
          command: dotnet tool install --global dotnet-ef --version 3.1.6
      - run:
          name: Globally install Elastic Beanstalk tools
          command: dotnet tool install -g Amazon.ElasticBeanstalk.Tools
      - run:
          name: Add global Dotnet tools to path
          command: echo 'export PATH="$PATH:$HOME/.dotnet/tools/"' >> $BASH_ENV
      - run:
          name: "Deploy the application"
          command: |
            cd src/WingedKeys
            cat aws-beanstalk-tools-defaults.json
            dotnet eb deploy-environment

  run-migrations:
    machine:
      image: ubuntu-1604:202007-01 
    parameters:
      env:
        description: "The environment to deploy Winged Keys to (qa, devsecure, staging)"
        type: string
    steps:
      - attach_workspace:
          at: .
      - add_ssh_keys
      - run:
          name: Add global Dotnet tools to path
          command: echo 'export PATH="$PATH:$HOME/.dotnet/tools/"' >> $BASH_ENV
      - run:
          name: Generate Migrations
          command: |
            export ConnectionStrings__WingedKeys=xxx && dotnet-ef --verbose migrations script --idempotent --output winged-keys-persisted-db.sql --context PersistedGrantDbContext --project src/WingedKeys
            export ConnectionStrings__WingedKeys=xxx && dotnet-ef --verbose migrations script --idempotent --output winged-keys-configuration-db.sql --context ConfigurationDbContext --project src/WingedKeys
            export ConnectionStrings__WingedKeys=xxx && dotnet-ef --verbose migrations script --idempotent --output winged-keys-wingedkeys-db.sql --context WingedKeysContext --project src/WingedKeys
      - run:
          name: 'Put SQL Migrations on Jump Server'
          command: |
            scp winged-keys-configuration-db.sql ubuntu@<< parameters.env >>.ece-jumpserver.ctoecskylight.com:/home/ubuntu/stage/wingedkeys/
            scp winged-keys-persisted-db.sql ubuntu@<< parameters.env >>.ece-jumpserver.ctoecskylight.com:/home/ubuntu/stage/wingedkeys/
            scp winged-keys-wingedkeys-db.sql ubuntu@<< parameters.env >>.ece-jumpserver.ctoecskylight.com:/home/ubuntu/stage/wingedkeys/
      - run:
          name: 'Run SQL Migrations'
          command: |
            ssh ubuntu@<< parameters.env >>.ece-jumpserver.ctoecskylight.com "cd /home/ubuntu/stage/wingedkeys/ && /home/ubuntu/scripts/db-migrate-wingedkeys.sh winged-keys-configuration-db.sql && /home/ubuntu/scripts/db-migrate-wingedkeys.sh winged-keys-persisted-db.sql && /home/ubuntu/scripts/db-migrate-wingedkeys.sh winged-keys-wingedkeys-db.sql"
      - run:
          name: 'Remove Migrations from Jump Server'
          command: |
            ssh ubuntu@<< parameters.env >>.ece-jumpserver.ctoecskylight.com "cd /home/ubuntu/stage/wingedkeys/ && rm winged-keys-configuration-db.sql winged-keys-persisted-db.sql winged-keys-wingedkeys-db.sql"

workflows:
  build-and-test:
    jobs:
      - prep:
          env: staging
      - deploy:
          env: staging
          requires:
            - prep
          filters:
            branches:
              only: master
  deploy-to-devsecure:
    jobs:
      - hold:
          type: approval
      - prep:
          env: devsecure
          requires: 
            - hold
      - deploy:
          env: devsecure
          requires:
            - prep
      - run-migrations:
          env: devsecure
          requires:
            - deploy
  deploy-to-qa:
    jobs:
      - hold:
          type: approval
      - prep:
          env: qa
          requires: 
            - hold
      - deploy:
          env: qa
          requires:
            - prep
      - run-migrations:
          env: qa
          requires:
            - deploy